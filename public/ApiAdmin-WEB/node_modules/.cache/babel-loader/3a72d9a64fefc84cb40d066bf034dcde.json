{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/interface/response.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/interface/response.vue","mtime":1596016298725},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/.babelrc","mtime":1596016298716},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getResponse, edit, del, upJson } from '@/api/fields';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  return h('Button', {\n    props: {\n      type: 'primary'\n    },\n    style: {\n      margin: '0 5px'\n    },\n    on: {\n      'click': function click() {\n        vm.formItem.id = currentRow.id;\n        vm.formItem.field_name = currentRow.show_name;\n        vm.formItem.data_type = currentRow.data_type.toString();\n        vm.formItem.defaults = currentRow.default;\n        vm.formItem.range = currentRow.range;\n        vm.formItem.is_must = currentRow.is_must.toString();\n        vm.formItem.info = currentRow.info;\n        vm.modalSetting.show = true;\n        vm.modalSetting.index = index;\n      }\n    }\n  }, vm.$t('edit_button'));\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  return h('Poptip', {\n    props: {\n      confirm: true,\n      title: '您确定要删除这条数据吗? ',\n      transfer: true\n    },\n    on: {\n      'on-ok': function onOk() {\n        del(currentRow.id).then(function (response) {\n          currentRow.loading = false;\n          vm.tableData.splice(index, 1);\n          vm.$Message.success(response.data.msg);\n        });\n      }\n    }\n  }, [h('Button', {\n    style: {\n      margin: '0 5px'\n    },\n    props: {\n      type: 'error',\n      placement: 'top',\n      loading: currentRow.isDeleting\n    }\n  }, vm.$t('delete_button'))]);\n};\n\nexport default {\n  name: 'interface_response',\n  data: function data() {\n    var _this = this;\n\n    return {\n      hash: '',\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '字段名称',\n        align: 'left',\n        key: 'show_name',\n        width: 200\n      }, {\n        title: '数据类型',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          var type = params.row.data_type;\n          return h('Tag', {\n            attrs: {\n              color: 'primary'\n            }\n          }, _this.tableShow.dataType[type]);\n        }\n      }, {\n        title: '是否必须',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          if (params.row.is_must === 1) {\n            return h('Tag', {\n              attrs: {\n                color: 'error'\n              }\n            }, '必填');\n          } else {\n            return h('Tag', {\n              attrs: {\n                color: 'primary'\n              }\n            }, '可选');\n          }\n        }\n      }, {\n        title: '默认值',\n        align: 'center',\n        key: 'default',\n        width: 160\n      }, {\n        title: '字段说明',\n        align: 'left',\n        key: 'info'\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 205,\n        render: function render(h, params) {\n          return h('div', [editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        dataType: {}\n      },\n      apiInfo: {},\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      uploadModal: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        field_name: '',\n        data_type: '2',\n        defaults: '',\n        range: '',\n        is_must: '1',\n        info: '',\n        type: 1,\n        id: 0\n      },\n      uploadItem: {\n        jsonStr: '',\n        type: 1\n      },\n      ruleValidate: {\n        field_name: [{\n          required: true,\n          message: '字段名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      uploadValidate: {\n        jsonStr: [{\n          required: true,\n          message: '数据模板不能为空',\n          trigger: 'blur'\n        }]\n      },\n      listLoading: false\n    };\n  },\n  created: function created() {\n    this.hash = this.$route.params.hash.toString();\n    this.getList();\n  },\n  activated: function activated() {\n    this.hash = this.$route.params.hash.toString();\n    this.getList();\n  },\n  methods: {\n    alertUpload: function alertUpload() {\n      this.uploadModal.show = true;\n    },\n    submit: function submit() {\n      this.formItem.hash = this.hash;\n      var vm = this;\n      this.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n          edit(vm.formItem).then(function (response) {\n            vm.$Message.success(response.data.msg);\n            vm.getList();\n            vm.cancel();\n          }).catch(function () {\n            vm.modalSetting.loading = false;\n          });\n        }\n      });\n    },\n    submitUpload: function submitUpload() {\n      this.uploadItem.hash = this.hash;\n      var vm = this;\n      this.$refs['uploadForm'].validate(function (valid) {\n        if (valid) {\n          vm.uploadModal.loading = true;\n          upJson(vm.uploadItem).then(function (response) {\n            vm.$Message.success(response.data.msg);\n            vm.getList();\n            vm.cancelUpload();\n          }).catch(function () {\n            vm.uploadModal.loading = false;\n          });\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    cancelUpload: function cancelUpload() {\n      this.uploadModal.show = false;\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      vm.listLoading = true;\n      getResponse({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        hash: vm.hash\n      }).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.tableShow.dataType = response.data.data.dataType;\n        vm.apiInfo = response.data.data.apiInfo;\n        vm.listLoading = false;\n      });\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.formItem.defaults = '';\n        this.formItem.isMust = '1';\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    },\n    doUploadCancel: function doUploadCancel(data) {\n      if (!data) {\n        this.uploadItem.jsonStr = '';\n        this.uploadModal.loading = false;\n      }\n    }\n  }\n};",{"version":3,"sources":["response.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\n  @import './list.less';\n</style>\n<template>\n  <div>\n    <Row>\n      <Col span=\"24\">\n        <Card>\n          <p slot=\"title\" style=\"height: 32px\">\n            <Button type=\"warning\" @click=\"alertUpload\" icon=\"md-cloud-upload\">上传</Button>\n          </p>\n          <Alert show-icon>\n            {{ apiInfo.info }} | {{ apiInfo.hash }} | {{ apiInfo.api_class }}\n            <Icon type=\"ios-bulb-outline\" slot=\"icon\"></Icon>\n            <span slot=\"desc\"></span>\n          </Alert>\n          <div>\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\n          </div>\n          <div class=\"margin-top-15\" style=\"text-align: center\">\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"md-alert\"></Icon>\n        <span>{{formItem.id ? '编辑' : '新增'}}返回字段</span>\n      </p>\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\n        <FormItem label=\"字段名称\" prop=\"field_name\">\n          <Input v-model=\"formItem.field_name\" disabled placeholder=\"请输入字段名称\"></Input>\n        </FormItem>\n        <FormItem label=\"数据类型\" prop=\"data_type\">\n          <Select v-model=\"formItem.data_type\" style=\"width:200px\">\n            <Option v-for=\"(v, i) in tableShow.dataType\" :value=\"i\" :key=\"i\"> {{v}}</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"是否必填\">\n          <RadioGroup v-model=\"formItem.is_must\">\n            <Radio label=\"0\">不必填</Radio>\n            <Radio label=\"1\">必填</Radio>\n          </RadioGroup>\n        </FormItem>\n        <FormItem label=\"默认值\" prop=\"default\" v-if=\"formItem.is_must.toString() === '0'\">\n          <Input disabled style=\"width: 300px\" v-model=\"formItem.defaults\"></Input>\n          <Tag color=\"error\" class=\"margin-left-5\"> 仅在字段非必填的情况下生效 </Tag>\n        </FormItem>\n        <FormItem label=\"规则细节\" prop=\"range\">\n          <Input disabled v-model=\"formItem.range\" type=\"textarea\" placeholder=\"请输入符合要求的JSON字符串\"></Input>\n        </FormItem>\n        <FormItem label=\"字段说明\" prop=\"info\">\n          <Input v-model=\"formItem.info\" type=\"textarea\" placeholder=\"请输入字段描述\"></Input>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"uploadModal.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doUploadCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"information-circled\"></Icon>\n        <span>上传返回字段</span>\n      </p>\n      <Form ref=\"uploadForm\" :rules=\"uploadValidate\" :model=\"uploadItem\" :label-width=\"80\">\n        <FormItem label=\"数据模板\" prop=\"jsonStr\">\n          <Input v-model=\"uploadItem.jsonStr\" :autosize=\"{maxRows: 10}\" type=\"textarea\"\n                 placeholder=\"请务必包含code,msg,data全部返回数据\"></Input>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancelUpload\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"submitUpload\" :loading=\"uploadModal.loading\">确定</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n<script>\nimport { getResponse, edit, del, upJson } from '@/api/fields'\n\nconst editButton = (vm, h, currentRow, index) => {\n  return h('Button', {\n    props: {\n      type: 'primary'\n    },\n    style: {\n      margin: '0 5px'\n    },\n    on: {\n      'click': () => {\n        vm.formItem.id = currentRow.id\n        vm.formItem.field_name = currentRow.show_name\n        vm.formItem.data_type = currentRow.data_type.toString()\n        vm.formItem.defaults = currentRow.default\n        vm.formItem.range = currentRow.range\n        vm.formItem.is_must = currentRow.is_must.toString()\n        vm.formItem.info = currentRow.info\n        vm.modalSetting.show = true\n        vm.modalSetting.index = index\n      }\n    }\n  }, vm.$t('edit_button'))\n}\nconst deleteButton = (vm, h, currentRow, index) => {\n  return h('Poptip', {\n    props: {\n      confirm: true,\n      title: '您确定要删除这条数据吗? ',\n      transfer: true\n    },\n    on: {\n      'on-ok': () => {\n        del(currentRow.id).then(response => {\n          currentRow.loading = false\n          vm.tableData.splice(index, 1)\n          vm.$Message.success(response.data.msg)\n        })\n      }\n    }\n  }, [\n    h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))\n  ])\n}\nexport default {\n  name: 'interface_response',\n  data () {\n    return {\n      hash: '',\n      columnsList: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '字段名称',\n          align: 'left',\n          key: 'show_name',\n          width: 200\n        },\n        {\n          title: '数据类型',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            let type = params.row.data_type\n            return h('Tag', {\n              attrs: {\n                color: 'primary'\n              }\n            }, this.tableShow.dataType[type])\n          }\n        },\n        {\n          title: '是否必须',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                attrs: {\n                  color: 'error'\n                }\n              }, '必填')\n            } else {\n              return h('Tag', {\n                attrs: {\n                  color: 'primary'\n                }\n              }, '可选')\n            }\n          }\n        },\n        {\n          title: '默认值',\n          align: 'center',\n          key: 'default',\n          width: 160\n        },\n        {\n          title: '字段说明',\n          align: 'left',\n          key: 'info'\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 205,\n          render: (h, params) => {\n            return h('div', [\n              editButton(this, h, params.row, params.index),\n              deleteButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        dataType: {}\n      },\n      apiInfo: {},\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      uploadModal: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        field_name: '',\n        data_type: '2',\n        defaults: '',\n        range: '',\n        is_must: '1',\n        info: '',\n        type: 1,\n        id: 0\n      },\n      uploadItem: {\n        jsonStr: '',\n        type: 1\n      },\n      ruleValidate: {\n        field_name: [\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\n        ]\n      },\n      uploadValidate: {\n        jsonStr: [\n          { required: true, message: '数据模板不能为空', trigger: 'blur' }\n        ]\n      },\n      listLoading: false\n    }\n  },\n  created () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  activated () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  methods: {\n    alertUpload () {\n      this.uploadModal.show = true\n    },\n    submit () {\n      this.formItem.hash = this.hash\n      let vm = this\n      this.$refs['myForm'].validate((valid) => {\n        if (valid) {\n          vm.modalSetting.loading = true\n          edit(vm.formItem).then(response => {\n            vm.$Message.success(response.data.msg)\n            vm.getList()\n            vm.cancel()\n          }).catch(() => {\n            vm.modalSetting.loading = false\n          })\n        }\n      })\n    },\n    submitUpload () {\n      this.uploadItem.hash = this.hash\n      let vm = this\n      this.$refs['uploadForm'].validate((valid) => {\n        if (valid) {\n          vm.uploadModal.loading = true\n          upJson(vm.uploadItem).then(response => {\n            vm.$Message.success(response.data.msg)\n            vm.getList()\n            vm.cancelUpload()\n          }).catch(() => {\n            vm.uploadModal.loading = false\n          })\n        }\n      })\n    },\n    cancel () {\n      this.modalSetting.show = false\n    },\n    cancelUpload () {\n      this.uploadModal.show = false\n    },\n    changePage (page) {\n      this.tableShow.currentPage = page\n      this.getList()\n    },\n    changeSize (size) {\n      this.tableShow.pageSize = size\n      this.getList()\n    },\n    search () {\n      this.tableShow.currentPage = 1\n      this.getList()\n    },\n    getList () {\n      let vm = this\n      vm.listLoading = true\n      getResponse({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        hash: vm.hash\n      }).then(response => {\n        vm.tableData = response.data.data.list\n        vm.tableShow.listCount = response.data.data.count\n        vm.tableShow.dataType = response.data.data.dataType\n        vm.apiInfo = response.data.data.apiInfo\n        vm.listLoading = false\n      })\n    },\n    doCancel (data) {\n      if (!data) {\n        this.formItem.id = 0\n        this.formItem.defaults = ''\n        this.formItem.isMust = '1'\n        this.$refs['myForm'].resetFields()\n        this.modalSetting.loading = false\n        this.modalSetting.index = 0\n      }\n    },\n    doUploadCancel (data) {\n      if (!data) {\n        this.uploadItem.jsonStr = ''\n        this.uploadModal.loading = false\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/view/interface"}]}