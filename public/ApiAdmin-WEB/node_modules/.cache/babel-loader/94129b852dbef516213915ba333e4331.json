{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js??ref--0-0!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/system/auth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/system/auth.vue","mtime":1596016298726},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/.babelrc","mtime":1596016298716},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getUsers } from '@/api/user';\nimport { getList as _getList, add, edit, del, delMember, getRuleList, changeStatus, editRule } from '@/api/auth';\n\nvar editButton = function editButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          vm.formItem.name = currentRow.name;\n          vm.formItem.description = currentRow.description;\n          vm.modalSetting.show = true;\n          vm.modalSetting.index = index;\n        }\n      }\n    }, vm.$t('edit_button'));\n  }\n};\n\nvar authButton = function authButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'info',\n        ghost: true\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.formItem.id = currentRow.id;\n          getRuleList({\n            'group_id': currentRow.id\n          }).then(function (response) {\n            vm.ruleList = response.data.data.list;\n          });\n          vm.authSetting.show = true;\n          vm.authSetting.index = index;\n        }\n      }\n    }, '设置权限');\n  }\n};\n\nvar deleteButton = function deleteButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          del(currentRow.id).then(function (response) {\n            vm.tableData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nvar memberButton = function memberButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.memberList) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': function click() {\n          vm.memberSetting.show = true;\n          vm.memberShow.gid = currentRow.id;\n          vm.getMemberList();\n        }\n      }\n    }, '组成员');\n  }\n};\n\nvar memberDelButton = function memberDelButton(vm, h, currentRow, index) {\n  if (vm.buttonShow.memberDel) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': function onOk() {\n          delMember({\n            uid: currentRow.id,\n            gid: vm.memberShow.gid\n          }).then(function (response) {\n            vm.memberData.splice(index, 1);\n            vm.$Message.success(response.data.msg);\n          });\n        }\n      }\n    }, [h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))]);\n  }\n};\n\nexport default {\n  name: 'system_auth',\n  data: function data() {\n    var _this = this;\n\n    return {\n      ruleList: [],\n      columnsList: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '权限组',\n        align: 'center',\n        key: 'name',\n        width: 200\n      }, {\n        title: '描述',\n        align: 'center',\n        key: 'description'\n      }, {\n        title: '成员授权',\n        align: 'center',\n        width: 116,\n        render: function render(h, params) {\n          return h('div', [memberButton(_this, h, params.row, params.index)]);\n        }\n      }, {\n        title: '状态',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          var vm = _this;\n          return h('i-switch', {\n            attrs: {\n              size: 'large'\n            },\n            props: {\n              'true-value': 1,\n              'false-value': 0,\n              value: params.row.status,\n              disabled: !vm.buttonShow.changeStatus\n            },\n            on: {\n              'on-change': function onChange(status) {\n                changeStatus(status, params.row.id).then(function (response) {\n                  vm.$Message.success(response.data.msg);\n                  vm.getList();\n                });\n              }\n            }\n          }, [h('span', {\n            slot: 'open'\n          }, vm.$t('open_choose')), h('span', {\n            slot: 'close'\n          }, vm.$t('close_choose'))]);\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 285,\n        render: function render(h, params) {\n          return h('div', [authButton(_this, h, params.row, params.index), editButton(_this, h, params.row, params.index), deleteButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      memberColumns: [{\n        title: '序号',\n        type: 'index',\n        width: 65,\n        align: 'center'\n      }, {\n        title: '用户账号',\n        align: 'center',\n        key: 'username'\n      }, {\n        title: '用户昵称',\n        align: 'center',\n        key: 'nickname',\n        width: 100\n      }, {\n        title: '登录次数',\n        align: 'center',\n        key: 'login_times',\n        width: 100\n      }, {\n        title: '最后登录时间',\n        align: 'center',\n        key: 'last_login_time',\n        width: 140\n      }, {\n        title: '最后登录IP',\n        align: 'center',\n        key: 'last_login_ip',\n        width: 160\n      }, {\n        title: '状态',\n        align: 'center',\n        width: 100,\n        render: function render(h, params) {\n          if (params.row.status === 1) {\n            return h('Tag', {\n              props: {\n                'color': 'green'\n              }\n            }, '启用');\n          } else {\n            return h('Tag', {\n              props: {\n                'color': 'red'\n              }\n            }, vm.$t('close_choose'));\n          }\n        }\n      }, {\n        title: '操作',\n        align: 'center',\n        width: 115,\n        render: function render(h, params) {\n          return h('div', [memberDelButton(_this, h, params.row, params.index)]);\n        }\n      }],\n      tableData: [],\n      memberData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      memberShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        gid: 0\n      },\n      searchConf: {\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      authSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      memberSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        name: '',\n        description: '',\n        rules: [],\n        id: 0\n      },\n      ruleValidate: {\n        name: [{\n          required: true,\n          message: '组名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true,\n        memberDel: true,\n        memberList: true\n      },\n      listLoading: false,\n      memberLoading: false\n    };\n  },\n  created: function created() {\n    var vm = this;\n    vm.getList();\n    vm.hasRule('Auth/edit').then(function (res) {\n      vm.buttonShow.edit = res;\n    });\n    vm.hasRule('Auth/del').then(function (res) {\n      vm.buttonShow.del = res;\n    });\n    vm.hasRule('Auth/changeStatus').then(function (res) {\n      vm.buttonShow.changeStatus = res;\n    });\n    vm.hasRule('User/getUsers').then(function (res) {\n      vm.buttonShow.memberList = res;\n    });\n    vm.hasRule('Auth/delMember').then(function (res) {\n      vm.buttonShow.memberDel = res;\n    });\n  },\n  methods: {\n    authEdit: function authEdit() {\n      var vm = this;\n      vm.formItem.rules = [];\n      var ruleNodes = vm.$refs['formTree'].getCheckedNodes();\n      var ruleLength = ruleNodes.length;\n\n      if (ruleLength) {\n        for (var i = 0; i <= ruleLength - 1; i++) {\n          this.formItem.rules.push(ruleNodes[i]['key']);\n        }\n      }\n\n      vm.authSetting.loading = true;\n      editRule(vm.formItem).then(function (response) {\n        vm.$Message.success(response.data.msg);\n        vm.authSetting.show = false;\n        vm.authSetting.loading = false;\n      }).catch(function () {\n        vm.authSetting.loading = false;\n      });\n    },\n    alertAdd: function alertAdd() {\n      this.modalSetting.show = true;\n    },\n    submit: function submit() {\n      var vm = this;\n      this.$refs['myForm'].validate(function (valid) {\n        if (valid) {\n          vm.modalSetting.loading = true;\n\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          } else {\n            edit(vm.formItem).then(function (response) {\n              vm.$Message.success(response.data.msg);\n              vm.getList();\n              vm.cancel();\n            }).catch(function () {\n              vm.modalSetting.loading = false;\n            });\n          }\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.modalSetting.show = false;\n    },\n    doCancel: function doCancel(data) {\n      if (!data) {\n        this.formItem.id = 0;\n        this.$refs['myForm'].resetFields();\n        this.modalSetting.loading = false;\n        this.modalSetting.index = 0;\n      }\n    },\n    changePage: function changePage(page) {\n      this.tableShow.currentPage = page;\n      this.getList();\n    },\n    changeSize: function changeSize(size) {\n      this.tableShow.pageSize = size;\n      this.getList();\n    },\n    changeMemberPage: function changeMemberPage(page) {\n      this.memberShow.currentPage = page;\n      this.getMemberList();\n    },\n    changeMemberSize: function changeMemberSize(size) {\n      this.memberShow.pageSize = size;\n      this.getMemberList();\n    },\n    search: function search() {\n      this.tableShow.currentPage = 1;\n      this.getList();\n    },\n    getList: function getList() {\n      var vm = this;\n      var params = {\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      };\n      vm.listLoading = true;\n\n      _getList(params).then(function (response) {\n        vm.tableData = response.data.data.list;\n        vm.tableShow.listCount = response.data.data.count;\n        vm.listLoading = false;\n      });\n    },\n    getMemberList: function getMemberList() {\n      var vm = this;\n      var params = {\n        page: vm.memberShow.currentPage,\n        size: vm.memberShow.pageSize,\n        gid: vm.memberShow.gid\n      };\n      vm.memberLoading = true;\n      getUsers(params).then(function (response) {\n        vm.memberData = response.data.data.list;\n        vm.memberShow.listCount = response.data.data.count;\n        vm.memberLoading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["auth.vue"],"names":[],"mappings":"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","sourcesContent":["<style lang=\"less\" scoped>\n  @import './auth.less';\n</style>\n<template>\n  <div>\n    <Row>\n      <Col span=\"24\">\n        <Card class=\"margin-bottom-10\">\n          <Form inline>\n            <FormItem class=\"margin-bottom-0\">\n              <Select v-model=\"searchConf.status\" clearable placeholder='请选择状态' style=\"width:120px\">\n                <Option :value=\"1\">启用</Option>\n                <Option :value=\"0\">禁用</Option>\n              </Select>\n            </FormItem>\n            <FormItem class=\"margin-bottom-0\">\n              <Input v-model=\"searchConf.keywords\" placeholder=\"请输入组名称\"></Input>\n            </FormItem>\n            <FormItem class=\"margin-bottom-0\">\n              <Button type=\"primary\" @click=\"search\">{{ $t('find_button') }}/{{ $t('refresh_button') }}</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n    <Row>\n      <Col span=\"24\">\n        <Card>\n          <div class=\"margin-bottom-15\">\n            <Button type=\"primary\" v-has=\"'Auth/add'\" @click=\"alertAdd\" icon=\"md-add\">{{ $t('add_button') }}</Button>\n          </div>\n          <div>\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\n          </div>\n          <div class=\"margin-top-15\" style=\"text-align: center\">\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"md-alert\"></Icon>\n        <span>{{formItem.id ? '编辑' : '新增'}}权限组</span>\n      </p>\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\n        <FormItem label=\"组名称\" prop=\"name\">\n          <Input v-model=\"formItem.name\" placeholder=\"请输入权限组名称\"></Input>\n        </FormItem>\n        <FormItem label=\"组描述\" prop=\"description\">\n          <Input type=\"textarea\" v-model=\"formItem.description\" placeholder=\"请输入权限组描述\"></Input>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"authSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"md-alert\"></Icon>\n        <span>{{formItem.id ? '设置' : '新增'}}权限</span>\n      </p>\n      <div style=\"max-height: 560px;overflow: auto;\">\n        <Tree ref=\"formTree\" :data=\"ruleList\" show-checkbox multiple></Tree>\n      </div>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"authSetting.show = false\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"authEdit\" :loading=\"authSetting.loading\">确定</Button>\n      </div>\n    </Modal>\n    <Modal v-model=\"memberSetting.show\" width=\"998\" :styles=\"{top: '30px'}\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"information-circled\"></Icon>\n        <span>组成员列表</span>\n      </p>\n      <div>\n        <Table :loading=\"memberLoading\" :columns=\"memberColumns\" :data=\"memberData\" border disabled-hover></Table>\n      </div>\n      <div class=\"margin-top-15\" style=\"text-align: center\">\n        <Page :total=\"memberShow.listCount\" :current=\"memberShow.currentPage\"\n              :page-size=\"memberShow.pageSize\" @on-change=\"changeMemberPage\"\n              @on-page-size-change=\"changeMemberSize\" show-elevator show-sizer show-total></Page>\n      </div>\n      <p slot=\"footer\"></p>\n    </Modal>\n  </div>\n</template>\n<script>\nimport { getUsers } from '@/api/user'\nimport { getList, add, edit, del, delMember, getRuleList, changeStatus, editRule } from '@/api/auth'\n\nconst editButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': () => {\n          vm.formItem.id = currentRow.id\n          vm.formItem.name = currentRow.name\n          vm.formItem.description = currentRow.description\n          vm.modalSetting.show = true\n          vm.modalSetting.index = index\n        }\n      }\n    }, vm.$t('edit_button'))\n  }\n}\nconst authButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'info',\n        ghost: true\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': () => {\n          vm.formItem.id = currentRow.id\n          getRuleList({ 'group_id': currentRow.id }).then(response => {\n            vm.ruleList = response.data.data.list\n          })\n          vm.authSetting.show = true\n          vm.authSetting.index = index\n        }\n      }\n    }, '设置权限')\n  }\n}\nconst deleteButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': () => {\n          del(currentRow.id).then(response => {\n            vm.tableData.splice(index, 1)\n            vm.$Message.success(response.data.msg)\n          })\n        }\n      }\n    }, [\n      h('Button', {\n        style: {\n          margin: '0 5px'\n        },\n        props: {\n          type: 'error',\n          placement: 'top',\n          loading: currentRow.isDeleting\n        }\n      }, vm.$t('delete_button'))\n    ])\n  }\n}\nconst memberButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.memberList) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': () => {\n          vm.memberSetting.show = true\n          vm.memberShow.gid = currentRow.id\n          vm.getMemberList()\n        }\n      }\n    }, '组成员')\n  }\n}\nconst memberDelButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.memberDel) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': () => {\n          delMember({\n            uid: currentRow.id,\n            gid: vm.memberShow.gid\n          }).then(response => {\n            vm.memberData.splice(index, 1)\n            vm.$Message.success(response.data.msg)\n          })\n        }\n      }\n    }, [\n      h('Button', {\n        style: {\n          margin: '0 5px'\n        },\n        props: {\n          type: 'error',\n          placement: 'top',\n          loading: currentRow.isDeleting\n        }\n      }, vm.$t('delete_button'))\n    ])\n  }\n}\n\nexport default {\n  name: 'system_auth',\n  data () {\n    return {\n      ruleList: [],\n      columnsList: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '权限组',\n          align: 'center',\n          key: 'name',\n          width: 200\n        },\n        {\n          title: '描述',\n          align: 'center',\n          key: 'description'\n        },\n        {\n          title: '成员授权',\n          align: 'center',\n          width: 116,\n          render: (h, params) => {\n            return h('div', [\n              memberButton(this, h, params.row, params.index)\n            ])\n          }\n        },\n        {\n          title: '状态',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            let vm = this\n            return h('i-switch', {\n              attrs: {\n                size: 'large'\n              },\n              props: {\n                'true-value': 1,\n                'false-value': 0,\n                value: params.row.status,\n                disabled: !vm.buttonShow.changeStatus\n              },\n              on: {\n                'on-change': function (status) {\n                  changeStatus(status, params.row.id).then(response => {\n                    vm.$Message.success(response.data.msg)\n                    vm.getList()\n                  })\n                }\n              }\n            }, [\n              h('span', {\n                slot: 'open'\n              }, vm.$t('open_choose')),\n              h('span', {\n                slot: 'close'\n              }, vm.$t('close_choose'))\n            ])\n          }\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 285,\n          render: (h, params) => {\n            return h('div', [\n              authButton(this, h, params.row, params.index),\n              editButton(this, h, params.row, params.index),\n              deleteButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      memberColumns: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '用户账号',\n          align: 'center',\n          key: 'username'\n        },\n        {\n          title: '用户昵称',\n          align: 'center',\n          key: 'nickname',\n          width: 100\n        },\n        {\n          title: '登录次数',\n          align: 'center',\n          key: 'login_times',\n          width: 100\n        },\n        {\n          title: '最后登录时间',\n          align: 'center',\n          key: 'last_login_time',\n          width: 140\n        },\n        {\n          title: '最后登录IP',\n          align: 'center',\n          key: 'last_login_ip',\n          width: 160\n        },\n        {\n          title: '状态',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.status === 1) {\n              return h('Tag', {\n                props: {\n                  'color': 'green'\n                }\n              }, '启用')\n            } else {\n              return h('Tag', {\n                props: {\n                  'color': 'red'\n                }\n              }, vm.$t('close_choose'))\n            }\n          }\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 115,\n          render: (h, params) => {\n            return h('div', [\n              memberDelButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      tableData: [],\n      memberData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      memberShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        gid: 0\n      },\n      searchConf: {\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      authSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      memberSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        name: '',\n        description: '',\n        rules: [],\n        id: 0\n      },\n      ruleValidate: {\n        name: [\n          { required: true, message: '组名称不能为空', trigger: 'blur' }\n        ]\n      },\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true,\n        memberDel: true,\n        memberList: true\n      },\n      listLoading: false,\n      memberLoading: false\n    }\n  },\n  created () {\n    let vm = this\n    vm.getList()\n    vm.hasRule('Auth/edit').then(res => {\n      vm.buttonShow.edit = res\n    })\n    vm.hasRule('Auth/del').then(res => {\n      vm.buttonShow.del = res\n    })\n    vm.hasRule('Auth/changeStatus').then(res => {\n      vm.buttonShow.changeStatus = res\n    })\n    vm.hasRule('User/getUsers').then(res => {\n      vm.buttonShow.memberList = res\n    })\n    vm.hasRule('Auth/delMember').then(res => {\n      vm.buttonShow.memberDel = res\n    })\n  },\n  methods: {\n    authEdit () {\n      let vm = this\n      vm.formItem.rules = []\n      let ruleNodes = vm.$refs['formTree'].getCheckedNodes()\n      let ruleLength = ruleNodes.length\n      if (ruleLength) {\n        for (let i = 0; i <= ruleLength - 1; i++) {\n          this.formItem.rules.push(ruleNodes[i]['key'])\n        }\n      }\n\n      vm.authSetting.loading = true\n      editRule(vm.formItem).then(response => {\n        vm.$Message.success(response.data.msg)\n        vm.authSetting.show = false\n        vm.authSetting.loading = false\n      }).catch(() => {\n        vm.authSetting.loading = false\n      })\n    },\n    alertAdd () {\n      this.modalSetting.show = true\n    },\n    submit () {\n      let vm = this\n      this.$refs['myForm'].validate((valid) => {\n        if (valid) {\n          vm.modalSetting.loading = true\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          } else {\n            edit(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          }\n        }\n      })\n    },\n    cancel () {\n      this.modalSetting.show = false\n    },\n    doCancel (data) {\n      if (!data) {\n        this.formItem.id = 0\n        this.$refs['myForm'].resetFields()\n        this.modalSetting.loading = false\n        this.modalSetting.index = 0\n      }\n    },\n    changePage (page) {\n      this.tableShow.currentPage = page\n      this.getList()\n    },\n    changeSize (size) {\n      this.tableShow.pageSize = size\n      this.getList()\n    },\n    changeMemberPage (page) {\n      this.memberShow.currentPage = page\n      this.getMemberList()\n    },\n    changeMemberSize (size) {\n      this.memberShow.pageSize = size\n      this.getMemberList()\n    },\n    search () {\n      this.tableShow.currentPage = 1\n      this.getList()\n    },\n    getList () {\n      let vm = this\n      let params = {\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      }\n      vm.listLoading = true\n      getList(params).then(response => {\n        vm.tableData = response.data.data.list\n        vm.tableShow.listCount = response.data.data.count\n        vm.listLoading = false\n      })\n    },\n    getMemberList () {\n      let vm = this\n      let params = {\n        page: vm.memberShow.currentPage,\n        size: vm.memberShow.pageSize,\n        gid: vm.memberShow.gid\n      }\n      vm.memberLoading = true\n      getUsers(params).then(response => {\n        vm.memberData = response.data.data.list\n        vm.memberShow.listCount = response.data.data.count\n        vm.memberLoading = false\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/view/system"}]}