{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/eslint-loader/index.js??ref--13-0!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/libs/api.request.js","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/libs/api.request.js","mtime":1596016298723},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/.babelrc","mtime":1596016298716},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport config from '@/config';\nimport axios from 'axios';\nimport iView from 'view-design';\nimport { setToken, getToken } from '@/libs/util';\nimport router from '@/router';\nexport var baseUrl = (process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro) + 'admin/';\n\nvar HttpRequest = /*#__PURE__*/function () {\n  function HttpRequest(baseUrl) {\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = baseUrl;\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"interceptors\",\n    value: function interceptors(instance) {\n      // 请求拦截\n      instance.interceptors.request.use(function (config) {\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 响应拦截\n\n      instance.interceptors.response.use(function (res) {\n        var data = res.data,\n            status = res.status;\n\n        if (data.code < 0) {\n          if (data.code === -14) {\n            setToken('');\n            router.push({\n              name: 'login'\n            });\n          } else {\n            iView.Message.error(data.msg);\n          }\n\n          throw new Error(data.msg);\n        } else {\n          return {\n            data: data,\n            status: status\n          };\n        }\n      }, function (error) {\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      var apiAuth = getToken();\n\n      if (apiAuth === false) {\n        options = Object.assign({\n          baseURL: this.baseUrl,\n          headers: {}\n        }, options);\n      } else {\n        options = Object.assign({\n          baseURL: this.baseUrl,\n          headers: {\n            apiAuth: apiAuth\n          }\n        }, options);\n      }\n\n      this.interceptors(instance);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nvar api_axios = new HttpRequest(baseUrl);\nexport default api_axios;",{"version":3,"sources":["/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/libs/api.request.js"],"names":["config","axios","iView","setToken","getToken","router","baseUrl","process","env","NODE_ENV","dev","pro","HttpRequest","instance","interceptors","request","use","error","Promise","reject","response","res","data","status","code","push","name","Message","msg","Error","options","create","apiAuth","Object","assign","baseURL","headers","api_axios"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,aAAnC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,IAAMC,OAAO,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCT,MAAM,CAACM,OAAP,CAAeI,GAAxD,GAA8DV,MAAM,CAACM,OAAP,CAAeK,GAA9E,IAAqF,QAArG;;IAEDC,W;AACJ,uBAAaN,OAAb,EAAsB;AAAA;;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;iCAEaO,Q,EAAU;AACtB;AACAA,MAAAA,QAAQ,CAACC,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAAhB,MAAM,EAAI;AAC1C,eAAOA,MAAP;AACD,OAFD,EAEG,UAAAiB,KAAK,EAAI;AACV,eAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,OAJD,EAFsB,CAOtB;;AACAJ,MAAAA,QAAQ,CAACC,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CAAmC,UAAAK,GAAG,EAAI;AAAA,YAChCC,IADgC,GACfD,GADe,CAChCC,IADgC;AAAA,YAC1BC,MAD0B,GACfF,GADe,CAC1BE,MAD0B;;AAExC,YAAID,IAAI,CAACE,IAAL,GAAY,CAAhB,EAAmB;AACjB,cAAIF,IAAI,CAACE,IAAL,KAAc,CAAC,EAAnB,EAAuB;AACrBrB,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,YAAAA,MAAM,CAACoB,IAAP,CAAY;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAZ;AACD,WAHD,MAGO;AACLxB,YAAAA,KAAK,CAACyB,OAAN,CAAcV,KAAd,CAAoBK,IAAI,CAACM,GAAzB;AACD;;AACD,gBAAM,IAAIC,KAAJ,CAAUP,IAAI,CAACM,GAAf,CAAN;AACD,SARD,MAQO;AACL,iBAAO;AAAEN,YAAAA,IAAI,EAAJA,IAAF;AAAQC,YAAAA,MAAM,EAANA;AAAR,WAAP;AACD;AACF,OAbD,EAaG,UAAAN,KAAK,EAAI;AACV,eAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,OAfD;AAgBD;;;4BAEQa,O,EAAS;AAChB,UAAMjB,QAAQ,GAAGZ,KAAK,CAAC8B,MAAN,EAAjB;AACA,UAAIC,OAAO,GAAG5B,QAAQ,EAAtB;;AACA,UAAI4B,OAAO,KAAK,KAAhB,EAAuB;AACrBF,QAAAA,OAAO,GAAGG,MAAM,CAACC,MAAP,CAAc;AACtBC,UAAAA,OAAO,EAAE,KAAK7B,OADQ;AAEtB8B,UAAAA,OAAO,EAAE;AAFa,SAAd,EAGPN,OAHO,CAAV;AAID,OALD,MAKO;AACLA,QAAAA,OAAO,GAAGG,MAAM,CAACC,MAAP,CAAc;AACtBC,UAAAA,OAAO,EAAE,KAAK7B,OADQ;AAEtB8B,UAAAA,OAAO,EAAE;AACPJ,YAAAA,OAAO,EAAEA;AADF;AAFa,SAAd,EAKPF,OALO,CAAV;AAMD;;AACD,WAAKhB,YAAL,CAAkBD,QAAlB;AACA,aAAOA,QAAQ,CAACiB,OAAD,CAAf;AACD;;;;;;AAGH,IAAMO,SAAS,GAAG,IAAIzB,WAAJ,CAAgBN,OAAhB,CAAlB;AACA,eAAe+B,SAAf","sourcesContent":["import config from '@/config'\nimport axios from 'axios'\nimport iView from 'view-design'\nimport { setToken, getToken } from '@/libs/util'\nimport router from '@/router'\n\nexport const baseUrl = (process.env.NODE_ENV === 'development' ? config.baseUrl.dev : config.baseUrl.pro) + 'admin/'\n\nclass HttpRequest {\n  constructor (baseUrl) {\n    this.baseUrl = baseUrl\n  }\n\n  interceptors (instance) {\n    // 请求拦截\n    instance.interceptors.request.use(config => {\n      return config\n    }, error => {\n      return Promise.reject(error)\n    })\n    // 响应拦截\n    instance.interceptors.response.use(res => {\n      const { data, status } = res\n      if (data.code < 0) {\n        if (data.code === -14) {\n          setToken('')\n          router.push({ name: 'login' })\n        } else {\n          iView.Message.error(data.msg)\n        }\n        throw new Error(data.msg)\n      } else {\n        return { data, status }\n      }\n    }, error => {\n      return Promise.reject(error)\n    })\n  }\n\n  request (options) {\n    const instance = axios.create()\n    let apiAuth = getToken()\n    if (apiAuth === false) {\n      options = Object.assign({\n        baseURL: this.baseUrl,\n        headers: {}\n      }, options)\n    } else {\n      options = Object.assign({\n        baseURL: this.baseUrl,\n        headers: {\n          apiAuth: apiAuth\n        }\n      }, options)\n    }\n    this.interceptors(instance)\n    return instance(options)\n  }\n}\n\nconst api_axios = new HttpRequest(baseUrl)\nexport default api_axios\n"]}]}