{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/thread-loader/dist/cjs.js!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/eslint-loader/index.js??ref--13-0!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/libs/router-utils.js","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/libs/router-utils.js","mtime":1596016298723},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/.babelrc","mtime":1596016298716},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\n * ①添\n * @@新增 定义初始化菜单\n */\nimport lazyLoading from \"./lazy-loading\";\nimport Main from '@/components/main'; // Main 是架构组件，不在后台返回，在文件里单独引入\n// 加载路由菜单,从localStorage拿到路由,在创建路由时使用\n\nexport var dynamicRouterAdd = function dynamicRouterAdd() {\n  var data = sessionStorage.getItem('dynamicRouter');\n\n  if (!data) {\n    return [];\n  }\n\n  return filterAsyncRouter(JSON.parse(data));\n}; // @函数: 遍历后台传来的路由字符串，转换为组件对象\n\nexport var filterAsyncRouter = function filterAsyncRouter(asyncRouterMap) {\n  var accessedRouters = [];\n\n  if (asyncRouterMap) {\n    asyncRouterMap.filter(function (route) {\n      if (route.show === 1) {\n        var accessedRouter = {};\n        accessedRouter.path = route.router;\n        accessedRouter.name = route.title;\n        accessedRouter.meta = {\n          icon: route.icon,\n          title: route.title,\n          hideInMenu: false\n        };\n\n        if (route.component === '') {\n          accessedRouter.component = Main;\n        } else {\n          if (route.component === 'interface/request' || route.component === 'interface/response') {\n            accessedRouter.meta.hideInMenu = true;\n          }\n\n          accessedRouter.component = lazyLoading(route.component);\n        }\n\n        if (route.children && route.children.length) {\n          accessedRouter.children = filterAsyncRouter(route.children);\n        }\n\n        accessedRouters.push(accessedRouter);\n      }\n    });\n  }\n\n  return accessedRouters;\n};",null]}