{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/interface/request.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/interface/request.vue","mtime":1596016298725},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getRequest, add, edit, del } from '@/api/fields'\n\nconst editButton = (vm, h, currentRow, index) => {\n  return h('Button', {\n    props: {\n      type: 'primary'\n    },\n    style: {\n      margin: '0 5px'\n    },\n    on: {\n      'click': () => {\n        vm.formItem.id = currentRow.id\n        vm.formItem.field_name = currentRow.field_name\n        vm.formItem.data_type = currentRow.data_type.toString()\n        vm.formItem.defaults = currentRow.default\n        vm.formItem.range = currentRow.range\n        vm.formItem.is_must = currentRow.is_must.toString()\n        vm.formItem.info = currentRow.info\n        vm.modalSetting.show = true\n        vm.modalSetting.index = index\n      }\n    }\n  }, vm.$t('edit_button'))\n}\nconst deleteButton = (vm, h, currentRow, index) => {\n  return h('Poptip', {\n    props: {\n      confirm: true,\n      title: '您确定要删除这条数据吗? ',\n      transfer: true\n    },\n    on: {\n      'on-ok': () => {\n        del(currentRow.id).then(response => {\n          currentRow.loading = false\n          vm.tableData.splice(index, 1)\n          vm.$Message.success(response.data.msg)\n        })\n      }\n    }\n  }, [\n    h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))\n  ])\n}\nexport default {\n  name: 'interface_request',\n  data () {\n    return {\n      hash: '',\n      columnsList: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '字段名称',\n          align: 'left',\n          key: 'show_name',\n          width: 200\n        },\n        {\n          title: '数据类型',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            let type = params.row.data_type\n            return h('Tag', {\n              attrs: {\n                color: 'primary'\n              }\n            }, this.tableShow.dataType[type])\n          }\n        },\n        {\n          title: '是否必须',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                attrs: {\n                  color: 'error'\n                }\n              }, '必填')\n            } else {\n              return h('Tag', {\n                attrs: {\n                  color: 'primary'\n                }\n              }, '可选')\n            }\n          }\n        },\n        {\n          title: '默认值',\n          align: 'center',\n          key: 'default',\n          width: 160\n        },\n        {\n          title: '字段说明',\n          align: 'left',\n          key: 'info'\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 205,\n          render: (h, params) => {\n            return h('div', [\n              editButton(this, h, params.row, params.index),\n              deleteButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        dataType: {}\n      },\n      apiInfo: {},\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        field_name: '',\n        data_type: '2',\n        defaults: '',\n        range: '',\n        is_must: '1',\n        info: '',\n        type: 0,\n        id: 0\n      },\n      ruleValidate: {\n        field_name: [\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\n        ]\n      },\n      listLoading: false\n    }\n  },\n  created () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  activated () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  methods: {\n    alertAdd () {\n      this.modalSetting.show = true\n    },\n    submit () {\n      this.formItem.hash = this.hash\n      let vm = this\n      this.$refs['myForm'].validate((valid) => {\n        if (valid) {\n          vm.modalSetting.loading = true\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          } else {\n            edit(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          }\n        }\n      })\n    },\n    cancel () {\n      this.modalSetting.show = false\n    },\n    changePage (page) {\n      this.tableShow.currentPage = page\n      this.getList()\n    },\n    changeSize (size) {\n      this.tableShow.pageSize = size\n      this.getList()\n    },\n    search () {\n      this.tableShow.currentPage = 1\n      this.getList()\n    },\n    getList () {\n      let vm = this\n      vm.listLoading = true\n      getRequest({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        hash: vm.hash\n      }).then(response => {\n        vm.tableData = response.data.data.list\n        vm.tableShow.listCount = response.data.data.count\n        vm.tableShow.dataType = response.data.data.dataType\n        vm.apiInfo = response.data.data.apiInfo\n        vm.listLoading = false\n      })\n    },\n    doCancel (data) {\n      if (!data) {\n        this.formItem.id = 0\n        this.formItem.defaults = ''\n        this.formItem.isMust = '1'\n        this.$refs['myForm'].resetFields()\n        this.modalSetting.loading = false\n        this.modalSetting.index = 0\n      }\n    }\n  }\n}\n",{"version":3,"sources":["request.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"request.vue","sourceRoot":"src/view/interface","sourcesContent":["<style lang=\"less\" scoped>\n  @import './list.less';\n</style>\n<template>\n  <div>\n    <Row>\n      <Col span=\"24\">\n        <Card>\n          <p slot=\"title\" style=\"height: 32px\">\n            <Button type=\"primary\" @click=\"alertAdd\" icon=\"md-add\">{{ $t('add_button') }}</Button>\n          </p>\n          <Alert show-icon>\n            {{ apiInfo.info }} | {{ apiInfo.hash }} | {{ apiInfo.api_class }}\n            <Icon type=\"ios-bulb-outline\" slot=\"icon\"></Icon>\n            <span slot=\"desc\"></span>\n          </Alert>\n          <div>\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\n          </div>\n          <div class=\"margin-top-15\" style=\"text-align: center\">\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"md-alert\"></Icon>\n        <span>{{formItem.id ? '编辑' : '新增'}}请求字段</span>\n      </p>\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\n        <FormItem label=\"字段名称\" prop=\"field_name\">\n          <Input v-model=\"formItem.field_name\" placeholder=\"请输入字段名称\"></Input>\n        </FormItem>\n        <FormItem label=\"数据类型\" prop=\"data_type\">\n          <Select v-model=\"formItem.data_type\" style=\"width:200px\">\n            <Option v-for=\"(v, i) in tableShow.dataType\" :value=\"i\" :key=\"i\"> {{v}}</Option>\n          </Select>\n        </FormItem>\n        <FormItem label=\"是否必填\">\n          <RadioGroup v-model=\"formItem.is_must\">\n            <Radio label=\"0\">不必填</Radio>\n            <Radio label=\"1\">必填</Radio>\n          </RadioGroup>\n        </FormItem>\n        <FormItem label=\"默认值\" prop=\"default\" v-if=\"formItem.is_must.toString() === '0'\">\n          <Input style=\"width: 300px\" v-model=\"formItem.defaults\"></Input>\n          <Tag color=\"error\" class=\"margin-left-5\"> 仅在字段非必填的情况下生效 </Tag>\n        </FormItem>\n        <FormItem label=\"规则细节\" prop=\"range\">\n          <Input v-model=\"formItem.range\" type=\"textarea\" placeholder=\"请输入符合要求的JSON字符串\"></Input>\n        </FormItem>\n        <FormItem label=\"字段说明\" prop=\"info\">\n          <Input v-model=\"formItem.info\" type=\"textarea\" placeholder=\"请输入字段描述\"></Input>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n<script>\nimport { getRequest, add, edit, del } from '@/api/fields'\n\nconst editButton = (vm, h, currentRow, index) => {\n  return h('Button', {\n    props: {\n      type: 'primary'\n    },\n    style: {\n      margin: '0 5px'\n    },\n    on: {\n      'click': () => {\n        vm.formItem.id = currentRow.id\n        vm.formItem.field_name = currentRow.field_name\n        vm.formItem.data_type = currentRow.data_type.toString()\n        vm.formItem.defaults = currentRow.default\n        vm.formItem.range = currentRow.range\n        vm.formItem.is_must = currentRow.is_must.toString()\n        vm.formItem.info = currentRow.info\n        vm.modalSetting.show = true\n        vm.modalSetting.index = index\n      }\n    }\n  }, vm.$t('edit_button'))\n}\nconst deleteButton = (vm, h, currentRow, index) => {\n  return h('Poptip', {\n    props: {\n      confirm: true,\n      title: '您确定要删除这条数据吗? ',\n      transfer: true\n    },\n    on: {\n      'on-ok': () => {\n        del(currentRow.id).then(response => {\n          currentRow.loading = false\n          vm.tableData.splice(index, 1)\n          vm.$Message.success(response.data.msg)\n        })\n      }\n    }\n  }, [\n    h('Button', {\n      style: {\n        margin: '0 5px'\n      },\n      props: {\n        type: 'error',\n        placement: 'top',\n        loading: currentRow.isDeleting\n      }\n    }, vm.$t('delete_button'))\n  ])\n}\nexport default {\n  name: 'interface_request',\n  data () {\n    return {\n      hash: '',\n      columnsList: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '字段名称',\n          align: 'left',\n          key: 'show_name',\n          width: 200\n        },\n        {\n          title: '数据类型',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            let type = params.row.data_type\n            return h('Tag', {\n              attrs: {\n                color: 'primary'\n              }\n            }, this.tableShow.dataType[type])\n          }\n        },\n        {\n          title: '是否必须',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                attrs: {\n                  color: 'error'\n                }\n              }, '必填')\n            } else {\n              return h('Tag', {\n                attrs: {\n                  color: 'primary'\n                }\n              }, '可选')\n            }\n          }\n        },\n        {\n          title: '默认值',\n          align: 'center',\n          key: 'default',\n          width: 160\n        },\n        {\n          title: '字段说明',\n          align: 'left',\n          key: 'info'\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 205,\n          render: (h, params) => {\n            return h('div', [\n              editButton(this, h, params.row, params.index),\n              deleteButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      tableData: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0,\n        dataType: {}\n      },\n      apiInfo: {},\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        field_name: '',\n        data_type: '2',\n        defaults: '',\n        range: '',\n        is_must: '1',\n        info: '',\n        type: 0,\n        id: 0\n      },\n      ruleValidate: {\n        field_name: [\n          { required: true, message: '字段名称不能为空', trigger: 'blur' }\n        ]\n      },\n      listLoading: false\n    }\n  },\n  created () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  activated () {\n    this.hash = this.$route.params.hash.toString()\n    this.getList()\n  },\n  methods: {\n    alertAdd () {\n      this.modalSetting.show = true\n    },\n    submit () {\n      this.formItem.hash = this.hash\n      let vm = this\n      this.$refs['myForm'].validate((valid) => {\n        if (valid) {\n          vm.modalSetting.loading = true\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          } else {\n            edit(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          }\n        }\n      })\n    },\n    cancel () {\n      this.modalSetting.show = false\n    },\n    changePage (page) {\n      this.tableShow.currentPage = page\n      this.getList()\n    },\n    changeSize (size) {\n      this.tableShow.pageSize = size\n      this.getList()\n    },\n    search () {\n      this.tableShow.currentPage = 1\n      this.getList()\n    },\n    getList () {\n      let vm = this\n      vm.listLoading = true\n      getRequest({\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        hash: vm.hash\n      }).then(response => {\n        vm.tableData = response.data.data.list\n        vm.tableShow.listCount = response.data.data.count\n        vm.tableShow.dataType = response.data.data.dataType\n        vm.apiInfo = response.data.data.apiInfo\n        vm.listLoading = false\n      })\n    },\n    doCancel (data) {\n      if (!data) {\n        this.formItem.id = 0\n        this.formItem.defaults = ''\n        this.formItem.isMust = '1'\n        this.$refs['myForm'].resetFields()\n        this.modalSetting.loading = false\n        this.modalSetting.index = 0\n      }\n    }\n  }\n}\n</script>\n"]}]}