{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/wiki/list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/wiki/list.vue","mtime":1596016298727},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport './list.less'\nimport { apiGroup, detail, logout } from '@/api/wiki'\nimport { setToken } from '@/libs/util'\nimport ABackTop from '@/components/main/components/a-back-top'\n\nexport default {\n  name: 'wiki',\n  components: {\n    ABackTop\n  },\n  data () {\n    return {\n      show_detail: false,\n      show_loading: false,\n      app_id: sessionStorage.getItem('ApiAdmin_AppInfo'),\n      code: '',\n      url: '',\n      groupInfo: [],\n      header_columns: [\n        {\n          title: '参数名称',\n          key: 'field_name'\n        },\n        {\n          title: '类型',\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段状态',\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                props: {\n                  'color': 'red'\n                }\n              }, '复杂认证')\n            } else {\n              return h('Tag', {\n                props: {\n                  'color': 'blue'\n                }\n              }, '简易认证')\n            }\n          }\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      request_columns: [\n        {\n          title: '字段名称',\n          key: 'field_name'\n        },\n        {\n          title: '类型',\n          width: 100,\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段属性',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                props: {\n                  'color': 'red'\n                }\n              }, '必填')\n            } else {\n              return h('Tag', {\n                props: {\n                  'color': 'orange'\n                }\n              }, '选填')\n            }\n          }\n        },\n        {\n          title: '默认值',\n          key: 'default'\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      response_columns: [\n        {\n          title: '字段名称',\n          key: 'show_name'\n        },\n        {\n          title: '类型',\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      detail_info: {},\n      api_detail: {},\n      header_data: [],\n      co: ''\n    }\n  },\n  created () {\n    this.getList()\n  },\n  methods: {\n    logout () {\n      let vm = this\n      logout().then(response => {\n        vm.$Message.success(response.data.msg)\n        setToken('')\n        sessionStorage.removeItem('ApiAdmin_AppInfo')\n        vm.$router.push({\n          name: 'wiki_login'\n        })\n      })\n    },\n    getList () {\n      let vm = this\n      apiGroup().then(response => {\n        vm.groupInfo = response.data.data.data\n        vm.co = response.data.data.co\n      })\n    },\n    closeDrawer () {\n      this.getList()\n    },\n    showApiDetail (hash) {\n      let vm = this\n      vm.show_loading = true\n      detail({\n        hash: hash\n      }).then(response => {\n        let res = response.data.data\n        vm.detail_info = res\n        vm.show_detail = true\n        vm.show_loading = false\n        vm.url = res.url\n        vm.api_detail = res.apiList\n        if (res.apiList.return_str) {\n          vm.code = JSON.parse(res.apiList.return_str)\n        }\n        vm.header_data = [{\n          is_must: res.apiList.access_token,\n          field_name: 'access-token',\n          info: 'APP认证秘钥【请在Header头里面传递】',\n          data_type: 2\n        }]\n      })\n    }\n  }\n}\n",null]}