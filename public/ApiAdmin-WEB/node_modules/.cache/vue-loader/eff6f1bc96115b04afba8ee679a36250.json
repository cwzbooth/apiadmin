{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/wiki/list.vue?vue&type=style&index=0&id=5e70074c&scoped=true&lang=css&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/wiki/list.vue","mtime":1596016298727},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.line-height-16 {\n  line-height: 30px;\n}\n.url {\n  width: 90%;\n  display: inline-block;\n}\n",{"version":3,"sources":["list.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"list.vue","sourceRoot":"src/view/wiki","sourcesContent":["<style scoped>\n  .line-height-16 {\n    line-height: 30px;\n  }\n  .url {\n    width: 90%;\n    display: inline-block;\n  }\n</style>\n<template>\n  <Layout style=\"height: 100%\">\n    <Menu mode=\"horizontal\" theme=\"dark\" active-name=\"list\">\n      <div class=\"wiki-logo\"></div>\n      <div class=\"wiki-nav\">\n        <MenuItem name=\"list\" to=\"/wiki/list\">\n          <Icon type=\"md-list-box\" />\n          接口列表\n        </MenuItem>\n        <MenuItem name=\"error\" to=\"/wiki/error\">\n          <Icon type=\"logo-markdown\" />\n          错误码\n        </MenuItem>\n        <MenuItem name=\"calculation\" to=\"/wiki/calculation\">\n          <Icon type=\"ios-analytics\" />\n          算法详解\n        </MenuItem>\n        <Submenu name=\"4\">\n          <template slot=\"title\">\n            <Icon type=\"ios-contact\" />\n            {{app_id}}\n          </template>\n          <MenuItem name=\"4-1\" @click.native=\"logout\">\n            <Icon type=\"md-exit\" />\n            用户登出\n          </MenuItem>\n        </Submenu>\n      </div>\n    </Menu>\n    <Content class=\"wiki-content-con\">\n      <Card class=\"margin-top-15\">\n        <div>\n          <h3 class=\"line-height-16\">接口状态说明：</h3>\n          <p class=\"line-height-16\"><Tag color=\"warning\">测试</Tag>系统将不过滤任何字段，也不进行AccessToken的认证，但在必要的情况下会进行UserToken的认证！</p>\n          <p class=\"line-height-16\"><Tag color=\"primary\">启用</Tag>系统将严格过滤请求字段，并且进行全部必要认证！</p>\n          <p class=\"line-height-16\"><Tag color=\"error\">禁用</Tag>系统将拒绝所有请求，一般应用于危机处理！</p>\n        </div>\n      </Card>\n      <div class=\"wiki-layout-con\">\n        <Spin size=\"large\" fix v-if=\"show_loading\"></Spin>\n        <Collapse>\n          <Panel v-bind:key=\"index\" v-for=\"(item, index) in groupInfo\" :name=\"index.toString()\">\n            {{item.name}}【{{item.create_time}}】 <span style=\"float: right;\" class=\"margin-right-20\">接口数量{{item.api_info ? item.api_info.length : 0}} | 项目热度{{item.hot}}</span>\n            <p slot=\"content\" v-if=\"item.api_info\">\n              <span v-bind:key=\"api_index\" v-for=\"(api_item, api_index) in item.api_info\" @click=\"showApiDetail(api_item.hash)\" style=\"cursor:pointer\">\n                <Alert type=\"warning\" v-if=\"api_item.method === 0\">\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\n                  <template slot=\"desc\">\n                    <Tag color=\"warning\">不限</Tag>\n                    {{api_item.info}}\n                  </template>\n                </Alert>\n                <Alert v-if=\"api_item.method === 2\">\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\n                  <template slot=\"desc\">\n                    <Tag color=\"primary\">GET</Tag>\n                    {{api_item.info}}\n                  </template>\n                </Alert>\n                <Alert type=\"success\" v-if=\"api_item.method === 1\">\n                  <h3>/api/{{api_item.hash_type === 1 ? api_item.api_class : api_item.hash}}</h3>\n                  <template slot=\"desc\">\n                    <Tag color=\"success\">POST</Tag>\n                    {{api_item.info}}\n                  </template>\n                </Alert>\n              </span>\n            </p>\n            <p slot=\"content\" v-else style=\"text-align: center\">\n              <span>暂无接口</span>\n            </p>\n          </Panel>\n        </Collapse>\n        <ABackTop :height=\"100\" :bottom=\"80\" :right=\"60\" container=\".wiki-layout-con\"></ABackTop>\n      </div>\n    </Content>\n    <Footer class=\"wiki-footer-center\">&copy; Powered  By <Tag color=\"primary\">{{co}}</Tag></Footer>\n    <Drawer :title=\"api_detail.info\" v-model=\"show_detail\" width=\"820\" :mask-closable=\"false\" @on-close=\"closeDrawer\">\n      <Tabs type=\"card\">\n        <TabPane label=\"接口说明\">\n          <Form :label-width=\"80\">\n            <FormItem label=\"接口地址\">\n              <Tag v-if=\"api_detail.method === 1\" color=\"success\">POST</Tag>\n              <Tag v-if=\"api_detail.method === 2\" color=\"primary\">GET</Tag>\n              <Tag v-if=\"api_detail.method === 0\" color=\"warning\">不限</Tag> <Alert class=\"url\">{{url}}</Alert>\n            </FormItem>\n            <FormItem label=\"请求头部\">\n              <Table border :columns=\"header_columns\" :data=\"header_data\"></Table>\n            </FormItem>\n            <FormItem label=\"请求参数\">\n              <Table border :columns=\"request_columns\" :data=\"detail_info.request\"></Table>\n            </FormItem>\n            <FormItem label=\"返回参数\">\n              <Table border :columns=\"response_columns\" :data=\"detail_info.response\"></Table>\n            </FormItem>\n            <FormItem label=\"返回示例\" v-if=\"code\">\n              <div style=\"width: 100%\" v-highlight>\n                <pre><code>{{code}}</code></pre>\n              </div>\n            </FormItem>\n          </Form>\n        </TabPane>\n        <TabPane label=\"接口测试\">\n          <Card style=\"width:100%\">\n            <div style=\"text-align:center\">\n              <img width=\"120px\" src=\"https://cn.vuejs.org/images/logo.png\">\n              <h3>在线测试功能，即将到来</h3>\n            </div>\n          </Card>\n        </TabPane>\n      </Tabs>\n    </Drawer>\n  </Layout>\n</template>\n<script>\nimport './list.less'\nimport { apiGroup, detail, logout } from '@/api/wiki'\nimport { setToken } from '@/libs/util'\nimport ABackTop from '@/components/main/components/a-back-top'\n\nexport default {\n  name: 'wiki',\n  components: {\n    ABackTop\n  },\n  data () {\n    return {\n      show_detail: false,\n      show_loading: false,\n      app_id: sessionStorage.getItem('ApiAdmin_AppInfo'),\n      code: '',\n      url: '',\n      groupInfo: [],\n      header_columns: [\n        {\n          title: '参数名称',\n          key: 'field_name'\n        },\n        {\n          title: '类型',\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段状态',\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                props: {\n                  'color': 'red'\n                }\n              }, '复杂认证')\n            } else {\n              return h('Tag', {\n                props: {\n                  'color': 'blue'\n                }\n              }, '简易认证')\n            }\n          }\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      request_columns: [\n        {\n          title: '字段名称',\n          key: 'field_name'\n        },\n        {\n          title: '类型',\n          width: 100,\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段属性',\n          width: 100,\n          render: (h, params) => {\n            if (params.row.is_must === 1) {\n              return h('Tag', {\n                props: {\n                  'color': 'red'\n                }\n              }, '必填')\n            } else {\n              return h('Tag', {\n                props: {\n                  'color': 'orange'\n                }\n              }, '选填')\n            }\n          }\n        },\n        {\n          title: '默认值',\n          key: 'default'\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      response_columns: [\n        {\n          title: '字段名称',\n          key: 'show_name'\n        },\n        {\n          title: '类型',\n          render: (h, params) => {\n            return h('Tag', {\n              props: {\n                'color': 'blue'\n              }\n            }, this.detail_info.dataType[params.row.data_type])\n          }\n        },\n        {\n          title: '字段说明',\n          key: 'info',\n          width: 290,\n          render: (h, params) => {\n            let text = params.row.info.substring(0, 20) + '...'\n            if (params.row.info.length >= 20) {\n              return h('Tooltip', {\n                props: {\n                  transfer: true,\n                  maxWidth: 200\n                }\n              }, [\n                text,\n                h('div', {\n                  slot: 'content',\n                  style: {\n                    whiteSpace: 'normal',\n                    wordBreak: 'break-all',\n                    wordWrap: 'break-word'\n                  }\n                }, params.row.info)\n              ])\n            } else {\n              return h('span', params.row.info)\n            }\n          }\n        }\n      ],\n      detail_info: {},\n      api_detail: {},\n      header_data: [],\n      co: ''\n    }\n  },\n  created () {\n    this.getList()\n  },\n  methods: {\n    logout () {\n      let vm = this\n      logout().then(response => {\n        vm.$Message.success(response.data.msg)\n        setToken('')\n        sessionStorage.removeItem('ApiAdmin_AppInfo')\n        vm.$router.push({\n          name: 'wiki_login'\n        })\n      })\n    },\n    getList () {\n      let vm = this\n      apiGroup().then(response => {\n        vm.groupInfo = response.data.data.data\n        vm.co = response.data.data.co\n      })\n    },\n    closeDrawer () {\n      this.getList()\n    },\n    showApiDetail (hash) {\n      let vm = this\n      vm.show_loading = true\n      detail({\n        hash: hash\n      }).then(response => {\n        let res = response.data.data\n        vm.detail_info = res\n        vm.show_detail = true\n        vm.show_loading = false\n        vm.url = res.url\n        vm.api_detail = res.apiList\n        if (res.apiList.return_str) {\n          vm.code = JSON.parse(res.apiList.return_str)\n        }\n        vm.header_data = [{\n          is_must: res.apiList.access_token,\n          field_name: 'access-token',\n          info: 'APP认证秘钥【请在Header头里面传递】',\n          data_type: 2\n        }]\n      })\n    }\n  }\n}\n</script>\n"]}]}