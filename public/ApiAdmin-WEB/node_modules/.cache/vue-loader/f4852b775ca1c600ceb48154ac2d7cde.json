{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/login/login.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/login/login.vue","mtime":1596016298725},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/less-loader/dist/cjs.js","mtime":1596020961655},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n@import './login.less';\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";AACA","file":"login.vue","sourceRoot":"src/view/login","sourcesContent":["<style lang=\"less\">\n  @import './login.less';\n</style>\n\n<template>\n  <div class=\"login\" @keydown.enter=\"handleSubmit\">\n    <div class=\"login-con\">\n      <Card icon=\"md-log-in\" title=\"欢迎登录ApiAdmin后台管理系统\" :bordered=\"false\">\n        <div class=\"form-con\">\n          <Form ref=\"loginForm\" :model=\"form\" :rules=\"rules\">\n            <FormItem prop=\"username\">\n              <Input v-model=\"form.username\" placeholder=\"请使用微信/QQ登录\">\n                <span slot=\"prepend\">\n                  <Icon :size=\"16\" type=\"ios-person\"></Icon>\n                </span>\n              </Input>\n            </FormItem>\n            <FormItem prop=\"password\">\n              <Input type=\"password\" v-model=\"form.password\" placeholder=\"请使用微信/QQ登录\">\n                <span slot=\"prepend\">\n                  <Icon :size=\"14\" type=\"md-lock\"></Icon>\n                </span>\n              </Input>\n            </FormItem>\n            <FormItem class=\"margin-bottom-15\">\n              <Button type=\"primary\" long :loading=\"loading\" @click=\"handleSubmit\">登录</Button>\n            </FormItem>\n          </Form>\n          <div style=\"padding-top:10px;font-size: 11px;border-top: 1px solid #e9eaec;\">\n            <span style=\"vertical-align:middle;\">其他登录：</span>\n            <img style=\"vertical-align:middle;\" @click=\"qqLogin\" :src=\"qq_login\" alt=\"\"> &nbsp;\n            <img style=\"vertical-align:middle;\" @click=\"wxLogin\" :src=\"wx_login\" alt=\"\">\n          </div>\n        </div>\n      </Card>\n    </div>\n    <Modal v-model=\"wxQrModel\" width=\"360\">\n      <p slot=\"header\" style=\"color:#2d8cf0;\">\n        <Icon type=\"information-circled\"></Icon>\n        <span>请用微信扫码登录</span>\n      </p>\n      <div style=\"text-align:center\">\n        <img :src=\"wxQrUrl\" alt=\"\">\n      </div>\n      <div slot=\"footer\">\n        <Button type=\"primary\" size=\"large\" long @click=\"wxQrModel = false\">关闭</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { loginByQQ, wx, getQQCode, getQr, checkWxLogin, getWxCode } from '@/api/third-login'\nimport qq_login from '@/assets/images/qq-login.png'\nimport wx_login from '@/assets/images/wx-login.png'\nimport { filterAsyncRouter } from '@/libs/router-utils'\n\nexport default {\n  data () {\n    return {\n      qq_login,\n      wx_login,\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '账号不能为空', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '密码不能为空', trigger: 'blur' }\n        ]\n      },\n      wxQrModel: false,\n      wxQrUrl: '',\n      loading: false\n    }\n  },\n  created () {\n    let p = this.$route.params.loginType\n    let q = this.$route.query\n    if (p) {\n      this.$Spin.show()\n      let vm = this\n      switch (p) {\n        case 'qq':\n          loginByQQ(q).then(response => {\n            vm.$Spin.hide()\n            vm.$store.commit('setUserInfo', response.data.data)\n            vm.$store.commit('setToken', response.data.data.apiAuth)\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n          })\n          break\n        case 'wx':\n          wx(q).then(response => {\n            vm.$Spin.hide()\n            vm.$store.commit('setUserInfo', response.data.data)\n            vm.$store.commit('setToken', response.data.data.apiAuth)\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n          })\n          break\n        default :\n          this.$Spin.hide()\n          break\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\n      'handleLogin'\n    ]),\n    handleSubmit () {\n      let vm = this\n      let username = vm.form.username\n      let password = vm.form.password\n      vm.$refs.loginForm.validate((valid) => {\n        if (valid) {\n          vm.loading = true\n          vm.handleLogin({ username, password }).then(() => {\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n            vm.loading = false\n          }).catch(() => {\n            vm.loading = false\n          })\n        }\n      })\n    },\n    qqLogin () {\n      getQQCode().then(response => {\n        window.location.href = 'https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=' +\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\n          '&response_type=code&state=' + response.data.data.state\n      })\n    },\n    wxLoginBak () {\n      let vm = this\n      vm.wxQrModel = true\n      getQr().then(function (response) {\n        vm.wxQrUrl = response.data.data.qrUrl\n        let checkWx = setInterval(function () {\n          checkWxLogin({ state: response.data.data.state }).then(res => {\n            if (res.data.code === 1) {\n              vm.$store.commit('setUserInfo', res.data.data)\n              vm.$store.commit('setToken', res.data.data.apiAuth)\n              vm.$Message.success(res.data.msg)\n              vm.$router.push({\n                name: 'home'\n              })\n              clearInterval(checkWx)\n            }\n          }).catch(() => {\n            clearInterval(checkWx)\n          })\n        }, 3000)\n      })\n    },\n    wxLogin () {\n      getWxCode().then(response => {\n        window.location.href = 'https://open.weixin.qq.com/connect/qrconnect?appid=' +\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\n          '&response_type=code&scope=snsapi_login&state=' + response.data.data.state + '#wechat_redirect'\n      })\n    }\n  }\n}\n</script>\n"]}]}