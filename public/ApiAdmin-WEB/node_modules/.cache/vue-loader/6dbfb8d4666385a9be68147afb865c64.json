{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/login/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/login/login.vue","mtime":1596016298725},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapActions } from 'vuex'\nimport { loginByQQ, wx, getQQCode, getQr, checkWxLogin, getWxCode } from '@/api/third-login'\nimport qq_login from '@/assets/images/qq-login.png'\nimport wx_login from '@/assets/images/wx-login.png'\nimport { filterAsyncRouter } from '@/libs/router-utils'\n\nexport default {\n  data () {\n    return {\n      qq_login,\n      wx_login,\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '账号不能为空', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '密码不能为空', trigger: 'blur' }\n        ]\n      },\n      wxQrModel: false,\n      wxQrUrl: '',\n      loading: false\n    }\n  },\n  created () {\n    let p = this.$route.params.loginType\n    let q = this.$route.query\n    if (p) {\n      this.$Spin.show()\n      let vm = this\n      switch (p) {\n        case 'qq':\n          loginByQQ(q).then(response => {\n            vm.$Spin.hide()\n            vm.$store.commit('setUserInfo', response.data.data)\n            vm.$store.commit('setToken', response.data.data.apiAuth)\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n          })\n          break\n        case 'wx':\n          wx(q).then(response => {\n            vm.$Spin.hide()\n            vm.$store.commit('setUserInfo', response.data.data)\n            vm.$store.commit('setToken', response.data.data.apiAuth)\n            vm.$store.commit('updateMenuList', filterAsyncRouter(response.data.data.menu))\n            sessionStorage.setItem('dynamicRouter', JSON.stringify(response.data.data.menu))\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n          })\n          break\n        default :\n          this.$Spin.hide()\n          break\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\n      'handleLogin'\n    ]),\n    handleSubmit () {\n      let vm = this\n      let username = vm.form.username\n      let password = vm.form.password\n      vm.$refs.loginForm.validate((valid) => {\n        if (valid) {\n          vm.loading = true\n          vm.handleLogin({ username, password }).then(() => {\n            sessionStorage.setItem('ApiAdmin_AppInfo', '管理员')\n            vm.$router.push({\n              name: 'home'\n            })\n            vm.loading = false\n          }).catch(() => {\n            vm.loading = false\n          })\n        }\n      })\n    },\n    qqLogin () {\n      getQQCode().then(response => {\n        window.location.href = 'https://graph.qq.com/oauth2.0/authorize?response_type=code&client_id=' +\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\n          '&response_type=code&state=' + response.data.data.state\n      })\n    },\n    wxLoginBak () {\n      let vm = this\n      vm.wxQrModel = true\n      getQr().then(function (response) {\n        vm.wxQrUrl = response.data.data.qrUrl\n        let checkWx = setInterval(function () {\n          checkWxLogin({ state: response.data.data.state }).then(res => {\n            if (res.data.code === 1) {\n              vm.$store.commit('setUserInfo', res.data.data)\n              vm.$store.commit('setToken', res.data.data.apiAuth)\n              vm.$Message.success(res.data.msg)\n              vm.$router.push({\n                name: 'home'\n              })\n              clearInterval(checkWx)\n            }\n          }).catch(() => {\n            clearInterval(checkWx)\n          })\n        }, 3000)\n      })\n    },\n    wxLogin () {\n      getWxCode().then(response => {\n        window.location.href = 'https://open.weixin.qq.com/connect/qrconnect?appid=' +\n          response.data.data.appId + '&redirect_uri=' + response.data.data.redirectUri +\n          '&response_type=code&scope=snsapi_login&state=' + response.data.data.state + '#wechat_redirect'\n      })\n    }\n  }\n}\n",null]}