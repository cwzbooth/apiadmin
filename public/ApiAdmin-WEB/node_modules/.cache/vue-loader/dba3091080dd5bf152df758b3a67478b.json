{"remainingRequest":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js??vue-loader-options!/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/system/user.vue?vue&type=style&index=0&id=81ce12cc&lang=less&scoped=true&","dependencies":[{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/src/view/system/user.vue","mtime":1596016298726},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/less-loader/dist/cjs.js","mtime":1596020961655},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/www/wwwroot/apiadmin.fmoons.com/public/ApiAdmin-WEB/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n@import './user.less';\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";AACA","file":"user.vue","sourceRoot":"src/view/system","sourcesContent":["<style lang=\"less\" scoped>\n  @import './user.less';\n</style>\n<template>\n  <div>\n    <Row>\n      <Col span=\"24\">\n        <Card class=\"margin-bottom-10\">\n          <Form inline>\n            <FormItem class=\"margin-bottom-0\">\n              <Select v-model=\"searchConf.status\" clearable placeholder='请选择状态' style=\"width:120px\">\n                <Option :value=\"1\">启用</Option>\n                <Option :value=\"0\">禁用</Option>\n              </Select>\n            </FormItem>\n            <FormItem class=\"margin-bottom-0\">\n              <Select v-model=\"searchConf.type\" clearable placeholder=\"请选择类别\" style=\"width:120px\">\n                <Option :value=\"1\">用户账号</Option>\n                <Option :value=\"2\">用户昵称</Option>\n              </Select>\n            </FormItem>\n            <FormItem class=\"margin-bottom-0\">\n              <Input v-model=\"searchConf.keywords\" placeholder=\"\"></Input>\n            </FormItem>\n            <FormItem class=\"margin-bottom-0\">\n              <Button type=\"primary\" @click=\"search\">{{ $t('find_button') }}/{{ $t('refresh_button') }}</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n    <Row>\n      <Col span=\"24\">\n        <Card>\n          <div class=\"margin-bottom-15\">\n            <Button type=\"primary\" v-has=\"'User/add'\" @click=\"alertAdd\" icon=\"md-add\">{{ $t('add_button') }}</Button>\n          </div>\n          <div>\n            <Table :loading=\"listLoading\" :columns=\"columnsList\" :data=\"tableData\" border disabled-hover></Table>\n          </div>\n          <div class=\"margin-top-15\" style=\"text-align: center\">\n            <Page :total=\"tableShow.listCount\" :current=\"tableShow.currentPage\"\n                  :page-size=\"tableShow.pageSize\" @on-change=\"changePage\"\n                  @on-page-size-change=\"changeSize\" show-elevator show-sizer show-total></Page>\n          </div>\n        </Card>\n      </Col>\n    </Row>\n    <Modal v-model=\"modalSetting.show\" width=\"668\" :styles=\"{top: '30px'}\" @on-visible-change=\"doCancel\">\n      <p slot=\"header\" style=\"color:#2d8cf0\">\n        <Icon type=\"md-alert\"></Icon>\n        <span>{{formItem.id ? '编辑' : '新增'}}用户</span>\n      </p>\n      <Form ref=\"myForm\" :rules=\"ruleValidate\" :model=\"formItem\" :label-width=\"80\">\n        <FormItem label=\"用户账号\" prop=\"username\">\n          <Input v-model=\"formItem.username\" placeholder=\"请输入账号\"></Input>\n        </FormItem>\n        <FormItem label=\"用户昵称\" prop=\"nickname\">\n          <Input v-model=\"formItem.nickname\" placeholder=\"请输入昵称\"></Input>\n        </FormItem>\n        <FormItem label=\"用户密码\" prop=\"password\">\n          <Input v-model=\"formItem.password\" type=\"password\" placeholder=\"用户密码\"></Input>\n        </FormItem>\n        <FormItem label=\"权限组\" prop=\"group_id\">\n          <CheckboxGroup v-model=\"formItem.group_id\">\n            <Checkbox v-for=\"group in groupList\" :key=\"group.id\" :label=\"group.id + ''\">{{ group.name }}</Checkbox>\n          </CheckboxGroup>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"text\" @click=\"cancel\" class=\"margin-right-10\">取消</Button>\n        <Button type=\"primary\" @click=\"submit\" :loading=\"modalSetting.loading\">确定</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n<script>\nimport { getUserIndex, changeStatus, add, edit, del } from '@/api/user'\nimport { getGroups } from '@/api/auth'\n\nconst editButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.edit) {\n    return h('Button', {\n      props: {\n        type: 'primary'\n      },\n      style: {\n        margin: '0 5px'\n      },\n      on: {\n        'click': () => {\n          vm.formItem.id = currentRow.id\n          vm.formItem.username = currentRow.username\n          vm.formItem.nickname = currentRow.nickname\n          vm.formItem.password = 'ApiAdmin'\n          getGroups().then(response => {\n            vm.groupList = response.data.data.list\n          })\n          vm.formItem.group_id = currentRow.group_id\n          vm.modalSetting.show = true\n          vm.modalSetting.index = index\n        }\n      }\n    }, vm.$t('edit_button'))\n  }\n}\nconst deleteButton = (vm, h, currentRow, index) => {\n  if (vm.buttonShow.del) {\n    return h('Poptip', {\n      props: {\n        confirm: true,\n        title: '您确定要删除这条数据吗? ',\n        transfer: true\n      },\n      on: {\n        'on-ok': () => {\n          del(currentRow.id).then(response => {\n            vm.tableData.splice(index, 1)\n            vm.$Message.success(response.data.msg)\n          })\n          currentRow.loading = false\n        }\n      }\n    }, [\n      h('Button', {\n        style: {\n          margin: '0 5px'\n        },\n        props: {\n          type: 'error',\n          placement: 'top',\n          loading: currentRow.isDeleting\n        }\n      }, vm.$t('delete_button'))\n    ])\n  }\n}\n\nexport default {\n  name: 'system_user',\n  data () {\n    return {\n      columnsList: [\n        {\n          title: '序号',\n          type: 'index',\n          width: 65,\n          align: 'center'\n        },\n        {\n          title: '用户账号',\n          align: 'center',\n          key: 'username',\n          minWidth: 120\n        },\n        {\n          title: '用户昵称',\n          align: 'center',\n          key: 'nickname',\n          width: 160\n        },\n        {\n          title: '登录次数',\n          align: 'center',\n          render: (h, params) => {\n            return h('span', params.row.userData === null ? '' : params.row.userData.login_times)\n          },\n          width: 100\n        },\n        {\n          title: '最后登录时间',\n          align: 'center',\n          render: (h, params) => {\n            return h('span', params.row.userData === null ? '' : params.row.userData.last_login_time)\n          },\n          width: 170\n        },\n        {\n          title: '最后登录IP',\n          align: 'center',\n          render: (h, params) => {\n            return h('span', params.row.userData === null ? '' : params.row.userData.last_login_ip)\n          },\n          width: 160\n        },\n        {\n          title: '状态',\n          align: 'center',\n          width: 100,\n          render: (h, params) => {\n            let vm = this\n            return h('i-switch', {\n              attrs: {\n                size: 'large'\n              },\n              props: {\n                'true-value': 1,\n                'false-value': 0,\n                value: params.row.status,\n                disabled: !vm.buttonShow.changeStatus\n              },\n              on: {\n                'on-change': function (status) {\n                  changeStatus(status, params.row.id).then(response => {\n                    vm.$Message.success(response.data.msg)\n                    vm.getList()\n                  })\n                }\n              }\n            }, [\n              h('span', {\n                slot: 'open'\n              }, vm.$t('open_choose')),\n              h('span', {\n                slot: 'close'\n              }, vm.$t('close_choose'))\n            ])\n          }\n        },\n        {\n          title: '操作',\n          align: 'center',\n          width: 200,\n          render: (h, params) => {\n            return h('div', [\n              editButton(this, h, params.row, params.index),\n              deleteButton(this, h, params.row, params.index)\n            ])\n          }\n        }\n      ],\n      tableData: [],\n      groupList: [],\n      tableShow: {\n        currentPage: 1,\n        pageSize: 10,\n        listCount: 0\n      },\n      searchConf: {\n        type: '',\n        keywords: '',\n        status: ''\n      },\n      modalSetting: {\n        show: false,\n        loading: false,\n        index: 0\n      },\n      formItem: {\n        username: '',\n        nickname: '',\n        password: '',\n        group_id: [],\n        id: 0\n      },\n      ruleValidate: {\n        username: [\n          { required: true, message: '用户账号不能为空', trigger: 'blur' }\n        ],\n        nickname: [\n          { required: true, message: '用户昵称不能为空', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '用户密码不能为空', trigger: 'blur' }\n        ]\n      },\n      buttonShow: {\n        edit: true,\n        del: true,\n        changeStatus: true\n      },\n      listLoading: false\n    }\n  },\n  created () {\n    let vm = this\n    vm.getList()\n    vm.hasRule('User/edit').then(res => {\n      vm.buttonShow.edit = res\n    })\n    vm.hasRule('User/del').then(res => {\n      vm.buttonShow.del = res\n    })\n    vm.hasRule('User/changeStatus').then(res => {\n      vm.buttonShow.changeStatus = res\n    })\n  },\n  methods: {\n    alertAdd () {\n      let vm = this\n      getGroups().then(response => {\n        vm.groupList = response.data.data.list\n      })\n      this.modalSetting.show = true\n    },\n    submit () {\n      let vm = this\n      this.$refs['myForm'].validate((valid) => {\n        if (valid) {\n          vm.modalSetting.loading = true\n          if (vm.formItem.id === 0) {\n            add(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          } else {\n            edit(vm.formItem).then(response => {\n              vm.$Message.success(response.data.msg)\n              vm.getList()\n              vm.cancel()\n            }).catch(() => {\n              vm.modalSetting.loading = false\n            })\n          }\n        }\n      })\n    },\n    cancel () {\n      this.modalSetting.show = false\n    },\n    doCancel (data) {\n      if (!data) {\n        this.formItem.id = 0\n        this.$refs['myForm'].resetFields()\n        this.modalSetting.loading = false\n        this.modalSetting.index = 0\n      }\n    },\n    changePage (page) {\n      this.tableShow.currentPage = page\n      this.getList()\n    },\n    changeSize (size) {\n      this.tableShow.pageSize = size\n      this.getList()\n    },\n    search () {\n      this.tableShow.currentPage = 1\n      this.getList()\n    },\n    getList () {\n      let vm = this\n      let params = {\n        page: vm.tableShow.currentPage,\n        size: vm.tableShow.pageSize,\n        type: vm.searchConf.type,\n        keywords: vm.searchConf.keywords,\n        status: vm.searchConf.status\n      }\n      vm.listLoading = true\n      getUserIndex(params).then(response => {\n        vm.tableData = response.data.data.list\n        vm.tableShow.listCount = response.data.data.count\n        vm.listLoading = false\n      })\n    }\n  }\n}\n</script>\n"]}]}